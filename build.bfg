project('dhc', '0.0')

root = header_directory('.')

thread_safety_args = []
if env.builder('c++').brand == 'clang':
  thread_safety_args = [
    '-Wthread-safety',
    '-Wthread-safety-negative',
  ]

global_options([
  '-std=c++17',

  '-Wall',
  '-Wextra',
  '-Werror',

  # Ignore some annoying useless warnings.
  '-Wno-unused-parameter',

  # Unfortunately, COM interfaces don't have virtual destructors.
  '-Wno-non-virtual-dtor',

  # Disable some Windows cruft.
  '-DWIN32_LEAN_AND_MEAN',
  '-DNOMINMAX',

  # Enable some Windows cruft.
  '-D_WIN32_WINNT=0x0600',
] + thread_safety_args,
  lang = 'c++'
)

global_link_options([
  '-Wl,--enable-stdcall-fixup',
  '-static-libgcc',
  '-static-libstdc++',
])

dhc = shared_library(
  'dhc',
  files = [
    'dhc/dhc.cpp',
    'dhc/backend/dinput.cpp',
    'dhc/frontend/dinput.cpp',
    'dhc/frontend/ps4.cpp',
    'dhc/frontend/xinput.cpp',
    'dhc/logging.cpp',
    'dhc/utils.cpp',
  ],
  includes = root,
  compile_options = ['-DDHC_EXPORTS'],
  link_options = [
    opts.lib('dinput8')
  ],
)

dinput8 = shared_library(
  'dinput8',
  libs = [dhc],
  files = [
    'dinput8/dinput8.cpp',
  ],
  module_defs = 'dinput8/dinput8.def',
  includes = root,
)

xinput1_3 = shared_library(
  'xinput1_3',
  libs = [dhc],
  files = [
    'xinput1_3/xinput1_3.cpp',
  ],
  module_defs = 'xinput1_3/xinput1_3.def',
  includes = root,
)

dhc_test = executable(
  'dhc_test',
  libs = [dhc],
  files = ['test/dhc_test.cpp'],
  includes = root,
)

dinput_test = executable(
  'dinput_test',
  libs = [dhc],
  files = ['test/dinput_test.cpp'],
  includes = root,
  link_options = [
    opts.lib('dinput8'),
    opts.lib('dxguid')
  ],
)
